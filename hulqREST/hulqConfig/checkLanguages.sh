#!/bin/bash

#hulqBASH: Hosted Universal Language Qualifier in BASH.
#This script was designed and developed by Michael Rod
#for use by Revature LLC. 
#######################################################
#This component of the package evaluates the submitted 
#file names to ensure that they are source files 
#currently supported by hulqBASH.
#######################################################
#DO NOT EDIT THIS FILE#
#To add new file type handling: 
#### add the file extension to fileTypes.hulq
#### then add a file to /testingSettings named 
#### [extension].hulq (without [])
#### the contents of these files are defined in the 
#### readme located in /testingSettings.
#######################################################

#
# TODO:
#
# THIS FILE CHECKS IF THE TWO VALID FILE TYPES BUT IF ITS A KEY AND ITS ANSWER THEY SHOULD MATCH
# THIS WORKS IF PASSED IN IS 
# KEY.JAVA TEST.CPP 
# WHICH I BELIEVE SHOULDNT WORK NOT TOO SURE ON THE IMPLEMENTATION

#CHECK FILE TYPES ==================================================================
function check_file_types {
	keyStatus="false";
	testStatus="false";

    #ARRAY OF FILETYPES THAT ARE AVAILABLE AS OF NOW
    validTypess=("cpp" "c" "cs" "java" "py");

	for fileExt in "${validTypess[@]}"
	do
		if [[ "$keyFileName" == *.$fileExt ]]; then
			keyStatus="true";
		fi

		if [[ "$testFileName" == *.$fileExt ]]; then
			testStatus="true";
		fi

		if [[ $testStatus = "true" ]] && [[ $keyStatus = "true" ]]; then
			fileValid="true";
			break;
		fi

	done;
	if [[ $testStatus = "false" ]] || [[ $keyStatus = "false" ]]; then
			fileValid="false";
	fi
}

#READ FILE OPTIONS ==================================================================
function read_file_options {
	while read -r line || [[ -n "$line" ]]; do
    	if [[ $line != "" ]]; then 
			validTypes+=("$line");
    	fi;
	done < "fileTypes.hulq"
}
#=============================== END FUNCTIONS =============================================

keyFileName=$1;
testFileName=$2;
read_file_options;
check_file_types;
echo $fileValid;

